{
  "name": "VideoSnap",
  "tagline": "Simple command line app to record video and audio from a QuickTime capture device",
  "body": "# VideoSnap\r\n\r\nVideoSnap is an OSX command line tool for recording video and audio from any\r\nattached capture device.\r\n\r\nYou can specify which device to capture from, the duration, encoding, delay\r\nperiod (before capturing starts) and disable audio capturing.\r\n\r\nBy default VideoSnap will capture both video and audio from the default capture\r\ndevice at 30fps, with a Medium quality preset and a short (0.5s) warm-up delay.\r\n\r\nIf no duration is specified, VideoSnap will record until you cancel with\r\n[Ctrl+c]. You can also use VideoSnap to list attached capture devices by name.\r\n\r\n## Requirements\r\n\r\n * OSX 10.7+ (x86_64)\r\n * A web cam\r\n\r\nIf you need to capture video on older versions of OSX (or on 32-bit hardware),\r\ntry [wacaw](http://webcam-tools.sourceforge.net).\r\n\r\n## Usage\r\n\r\nThe following options are available:\r\n\r\n```\r\n  -l    List attached capture devices\r\n  -w    Set delay before capturing starts (in seconds, default 0.5s)\r\n  -t    Set duration of video (in seconds)\r\n  -d    Set the capture device by name (use -l to list attached devices)\r\n  -p    Set the encoding preset (use High, Medium (default), Low, 640x480 or 1280x720)\r\n  -v    Turn ON verbose mode (OFF by default)\r\n  -h    Show help\r\n  --no-audio\r\n        Don't capture audio (audio IS captured by default)\r\n```\r\n\r\n### Examples\r\n\r\nCapture 10.75 secs of video in 1280x720 720p HD format saving to movie.mov\r\n\r\n    videosnap -t 10.75 -p '1280x720'\r\n\r\nCapture 1 minute of video (Medium preset), but no audio from the \"Built-in\r\niSight\" device, delaying for 5 secs, saving to my_video.mov\r\n\r\n    videosnap -t 60 -w 5 -d 'Built-in iSight' --no-audio my_video.mov\r\n\r\nList all attached devices by name\r\n\r\n    videosnap -l\r\n\r\n### Warming Up\r\n\r\nSince some camera hardware can take a while to warm up, a default delay of 0.5\r\nseconds is applied. Override this with the `-w` argument (0 meaning no delay).\r\n\r\n### Encoding Presets\r\n\r\nThe AVFoundation framework provides the following video encoding presets:\r\n\r\n| Resolution    | Comments                                                  |\r\n| ------------- | --------------------------------------------------------- |\r\n| High          | Highest recording quality. This varies per device.        |\r\n| Medium        | Suitable for Wi-Fi sharing. The actual values may change. |\r\n| Low           | Suitable for 3G sharing. The actual values may change.    |\r\n| 640x480       | VGA.                                                      |\r\n| 1280x720      | 720p HD.                                                  |\r\n\r\nUse the `-p` flag to set which preset to apply.\r\n\r\n## Help\r\n\r\nGet command help with:\r\n\r\n    videosnap -h\r\n\r\nIf you have any problems, please do [raise an\r\nissue](https://github.com/matthutchinson/videosnap/issues) on GitHub. When\r\nreporting a bug, remember to mention what platform and hardware you are using\r\nand the steps I can take to reproduce the issue.\r\n\r\n## Contributing\r\n\r\nBug [reports](https://github.com/matthutchinson/videosnap/issues) and [pull\r\nrequests](https://github.com/matthutchinson/videosnap/pulls) are welcome on\r\nGitHub. Before submitting pull requests, please read the [contributing\r\nguidelines](https://github.com/matthutchinson/lifx_dash/blob/master/CONTRIBUTING.md)\r\nfor more details.\r\n\r\n## Development\r\n\r\nVideoSnap is coded with Objective-C and uses the\r\n[AVFoundation](https://developer.apple.com/av-foundation/) framework. You can\r\nbuild the project with [Xcode](http://developer.apple.com/xcode/) (using the\r\nXcode project workspace in the repository, or with the `xcodebuild` command).\r\n\r\n## Future Work\r\n\r\n* Allow VideoSnap to pipe captured bytes to the STDOUT stream\r\n* Submit VideoSnap as a package for [Homebrew](http://brew.sh)\r\n* Default filename should include a timestamp of when recording began\r\n* Allow more size/quality options for video and/or audio\r\n* Allow VideoSnap to capture a single frame to an image file (with compression\r\n  options based on file type like [ImageSnap](https://github.com/rharder/imagesnap))\r\n* A comprehensive test suite in Xcode\r\n\r\n## License\r\n\r\nVideoSnap is distributed under the terms of the [MIT\r\nLicense](http://opensource.org/licenses/MIT).\r\n\r\n## Who's Who?\r\n\r\n* [VideoSnap](http://github.com/matthutchinson/videosnap) by [Matthew Hutchinson](http://matthewhutchinson.net)\r\n* Inspired by [ImageSnap](https://github.com/rharder/imagesnap) by [@rharder](https://github.com/rharder)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}